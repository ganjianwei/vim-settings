snippet #!
	#!/usr/bin/python

snippet imp
	import ${1:module}
# Module Docstring
snippet docs
	'''
	File: ${1:`Filename('$1.py', 'foo.py')`}
	Author: ${2:`g:snips_author`}
	Description: ${3}
	'''
snippet wh
	while ${1:condition}:
		${2:# code...}
snippet for
	for ${1:needle} in ${2:haystack}:
		${3:# code...}
# New Class
snippet cl
	class ${1:ClassName}(${2:object}):
		"""${3:docstring for $1}.
		"""
		def __init__(self, ${4:arg}):
			${5:super($1, self).__init__()}
			self.$4 = $4
			${6}
# New Function
snippet def
	def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):
		"""${3:docstring for $1}.
		"""
		${4:raise NotImplementedError}
snippet deff
	def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):
		${3:raise NotImplementedError}
# New Method
snippet defs
	def ${1:mname}(self, ${2:arg}):
		${3:raise NotImplementedError}
# New Property
snippet property
	def ${1:foo}():
		doc = "${2:The $1 property.}"
		def fget(self):
			${3:return self._$1}
		def fset(self, value):
			${4:self._$1 = value}
# Lambda
snippet ld
	${1:var} = lambda ${2:vars} : ${3:action}
snippet .
	self.
snippet try Try/Except
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
snippet try Try/Except/Else
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	else:
		${5:pass}
snippet try Try/Except/Finally
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	finally:
		${5:pass}
snippet try Try/Except/Else/Finally
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	else:
		${5:pass}
	finally:
		${6:pass}
# if __name__ == '__main__':
snippet ifname
	if __name__ == '__main__':
		${1:main()}
# __magic__
snippet _
	__${1:init}__${2}
snippet todo
	# TODO(wei): ${1}
snippet inter
	import code; code.interact(local=locals())
snippet pdb
	import pdb; pdb.set_trace()
snippet pudb
	import pudb; pudb.set_trace()
snippet pprint
	from pprint import pprint
	pprint(${1})

# Tests
snippet moxtest
	"""Tests ${1:module}.
	"""
	import unittest

	import mox

	class ${2:name}TestCase(mox.MoxTestBase):
		"""Test case for $1.
		"""
		def setUp(self):
			"""Set up common unit test state.
			"""
			mox.MoxTestBase.setUp(self)

		def tearDown(self):
			"""Clean up common unit test state.
			"""
			mox.MoxTestBase.tearDown(self)
			self.mox.UnsetStubs()
			self.mox.ResetAll()


	if __name__ == '__main__':
		unittest.main()

snippet pvar
	print '${1:var}: %s' % ${1}

snippet merch_id
	merchant_id - Merchant account ID.

